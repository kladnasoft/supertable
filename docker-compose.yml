services:
  # ===================== Optional Infra (only when you include --profile infra) =====================
  redis:
    image: redis:7-alpine
    profiles: ["infra"]
    command: ["redis-server","--appendonly","yes"]
    # Map ports only if you want host access to this internal Redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  minio:
    image: minio/minio:latest
    profiles: ["infra"]
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${STORAGE_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${STORAGE_SECRET_KEY:-minioadmin123!}
    # Use non-default host ports to avoid clashes with your existing MinIO (9000/9001)
    ports:
      - "9002:9000"   # S3 API will be available at http://localhost:9002
      - "9003:9001"   # Console at http://localhost:9003
    volumes:
      - minio-data:/data

  # ===================== Apps (choose admin and/or mcp; infra is optional) =====================
  supertable-admin:
    build: .
    profiles: ["admin"]
    init: true
    env_file:
      - .env
    environment:
      SERVICE: admin
      HOST: 0.0.0.0
      PORT: 8000
      # must be set (in .env or env); prevents default "change-me-now" in prod
      SUPERTABLE_ADMIN_TOKEN: ${SUPERTABLE_ADMIN_TOKEN:?set_a_token}

      # ---- Defaults point to HOST services (your already-running Redis & MinIO) ----
      REDIS_HOST: ${REDIS_HOST:-host.docker.internal}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_DB:   ${REDIS_DB:-0}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      SUPERTABLE_REDIS_URL: ${SUPERTABLE_REDIS_URL:-redis://host.docker.internal:6379/0}

      STORAGE_ENDPOINT_URL: ${STORAGE_ENDPOINT_URL:-http://host.docker.internal:9000}
      STORAGE_BUCKET: ${STORAGE_BUCKET:-supertable}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY:-minioadmin}
      STORAGE_SECRET_KEY: ${STORAGE_SECRET_KEY:-minioadmin123!}
      STORAGE_FORCE_PATH_STYLE: ${STORAGE_FORCE_PATH_STYLE:-true}


      # Misc you already use
      SUPERTABLE_HOME: ${SUPERTABLE_HOME:-/app}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    # lets Linux containers reach host services using host.docker.internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8000:8000"

  supertable-mcp:
    build: .
    profiles: ["mcp"]
    init: true
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment:
      SERVICE: mcp
      LOG_LEVEL: ${LOG_LEVEL:-INFO}

      # ---- Defaults point to HOST services ----
      REDIS_HOST: ${REDIS_HOST:-host.docker.internal}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_DB:   ${REDIS_DB:-1}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      SUPERTABLE_REDIS_URL: ${SUPERTABLE_REDIS_URL:-redis://host.docker.internal:6379/1}

      STORAGE_ENDPOINT_URL: ${STORAGE_ENDPOINT_URL:-http://host.docker.internal:9000}
      STORAGE_BUCKET: ${STORAGE_BUCKET:-supertable}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY:-minioadmin}
      STORAGE_SECRET_KEY: ${STORAGE_SECRET_KEY:-minioadmin123!}
      STORAGE_FORCE_PATH_STYLE: ${STORAGE_FORCE_PATH_STYLE:-true}

      SUPERTABLE_HOME: ${SUPERTABLE_HOME:-/app}
      SUPERTABLE_REQUIRE_EXPLICIT_USER_HASH: ${SUPERTABLE_REQUIRE_EXPLICIT_USER_HASH:-1}
      SUPERTABLE_ALLOWED_USER_HASHES: ${SUPERTABLE_ALLOWED_USER_HASHES}
      SUPERTABLE_TEST_USER_HASH: ${SUPERTABLE_TEST_USER_HASH}
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  redis-data:
  minio-data:
